{"version":3,"sources":["../src/index.js"],"names":["BASE_URL","getJSONFromRelativeURL","relativeURL","then","res","json","getPeople","getPerson","id","getPersonByURL","requestURL","console","log","length","app","use","cacheMap","Map","peopleLoader","DataLoader","Promise","all","keys","map","personLoader","cacheKeyFn","key","personByURLLoader","loadAll","load","bind","loadByURL","loadManyByURL","loadMany","loaders","person","context","graphiql","schema","listen"],"mappings":"sRAAA,wC;;AAEA,kC;AACA,uC;AACA,iD;AACA,kC;;AAEA;AACA,IAAMA,WAAW,uBAAjB;;AAEA,SAASC,sBAAT,CAAgCC,WAAhC,EAA6C;AAC3C,SAAO,8BAASF,QAAT,GAAoBE,WAApB;AACJC,MADI,CACC,uBAAOC,IAAIC,IAAJ,EAAP,EADD,CAAP;AAED;;AAED,SAASC,SAAT,GAAqB;AACnB,SAAOL,uBAAuB,aAAvB;AACJE,MADI,CACC,gBAAQ;AACZ,WAAOE,IAAP;AACD,GAHI,CAAP;AAID;;AAED,SAASE,SAAT,CAAmBC,EAAnB,EAAuB;AACrB,SAAOC,4BAA0BD,EAA1B,OAAP;AACD;;AAED,SAASC,cAAT,CAAwBP,WAAxB,EAAqC;AACnC,MAAIQ,aAAaR,WAAjB;AACA,MAAG,OAAOA,WAAP,KAAuB,QAA1B,EAAoC;AAClCQ,iBAAa,aAAaA,UAA1B;AACD;AACD,SAAOT,uBAAuBS,UAAvB;AACJP,MADI,CACC,gBAAQ;AACZQ,YAAQC,GAAR,CAAY,oBAAZ,EAAkCP,IAAlC,EAAwCK,UAAxC;AACA,QAAG,QAAOL,IAAP,yCAAOA,IAAP,OAAgB,QAAhB,IAA4BA,KAAKQ,MAApC,EAA4C;AAC1C,aAAOR,KAAK,CAAL,CAAP;AACD;AACD,WAAOA,IAAP,CAAY,CANT,CAAP;AAOD;;AAED,IAAMS,MAAM,wBAAZ;;AAEAA,IAAIC,GAAJ,CAAQ,8BAAY,eAAO;AACzB,MAAMC,WAAW,IAAIC,GAAJ,EAAjB;AACA,MAAMC;AACJ,MAAIC,oBAAJ,CAAe,wBAAQC,QAAQC,GAAR,CAAYC,KAAKC,GAAL,CAASjB,SAAT,CAAZ,CAAR,EAAf,EAAyD,EAACU,kBAAD,EAAzD,CADF;AAEA,MAAMQ;AACJ,MAAIL,oBAAJ,CAAe,wBAAQC,QAAQC,GAAR,CAAYC,KAAKC,GAAL,CAAShB,SAAT,CAAZ,CAAR,EAAf,EAAyD;AACvDkB,gBAAY,8CAAkBC,GAAlB,QAD2C;AAEvDV,sBAFuD,EAAzD,CADF;;AAKA,MAAMW;AACJ,MAAIR,oBAAJ,CAAe,wBAAQC,QAAQC,GAAR,CAAYC,KAAKC,GAAL,CAASd,cAAT,CAAZ,CAAR,EAAf,EAA8D,EAACO,kBAAD,EAA9D,CADF;AAEAQ,eAAaI,OAAb,GAAuBV,aAAaW,IAAb,CAAkBC,IAAlB,CAAuBZ,YAAvB,EAAqC,SAArC,CAAvB;AACAM,eAAaO,SAAb,GAAyBJ,kBAAkBE,IAAlB,CAAuBC,IAAvB,CAA4BH,iBAA5B,CAAzB;AACAH,eAAaQ,aAAb;AACEL,oBAAkBM,QAAlB,CAA2BH,IAA3B,CAAgCH,iBAAhC,CADF;AAEA,MAAMO,UAAU,EAACC,QAAQX,YAAT,EAAhB;AACA,SAAO;AACLY,aAAS,EAACF,gBAAD,EADJ;AAELG,cAAU,IAFL;AAGLC,4BAHK,EAAP;;AAKD,CArBO,CAAR;;AAuBAxB,IAAIyB,MAAJ;AACE,IADF;AAEE,oBAAM5B,QAAQC,GAAR,CAAY,iDAAZ,CAAN,EAFF","file":"index.js","sourcesContent":["import DataLoader from 'dataloader';\n\nimport express from 'express';\nimport fetch from 'node-fetch';\nimport graphqlHTTP from 'express-graphql';\nimport schema from './schema';\n\n// const BASE_URL = 'http://localhost:8000';\nconst BASE_URL = 'http://localhost:1323';\n\nfunction getJSONFromRelativeURL(relativeURL) {\n  return fetch(`${BASE_URL}${relativeURL}`)\n    .then(res => res.json());\n}\n\nfunction getPeople() {\n  return getJSONFromRelativeURL('/people/all')\n    .then(json => {\n      return json\n    });\n}\n\nfunction getPerson(id) {\n  return getPersonByURL(`/people/${id}/`);\n}\n\nfunction getPersonByURL(relativeURL) {\n  let requestURL = relativeURL;\n  if(typeof relativeURL === 'number') {\n    requestURL = '/people/' + requestURL;\n  }\n  return getJSONFromRelativeURL(requestURL)\n    .then(json => {\n      console.log('===>getPersonByURL', json, requestURL);\n      if(typeof json === 'object' && json.length) {\n        return json[0];\n      }\n      return json});\n}\n\nconst app = express();\n\napp.use(graphqlHTTP(req => {\n  const cacheMap = new Map();\n  const peopleLoader =\n    new DataLoader(keys => Promise.all(keys.map(getPeople)), {cacheMap});\n  const personLoader =\n    new DataLoader(keys => Promise.all(keys.map(getPerson)), {\n      cacheKeyFn: key => `/people/${key}/`,\n      cacheMap,\n    });\n  const personByURLLoader =\n    new DataLoader(keys => Promise.all(keys.map(getPersonByURL)), {cacheMap});\n  personLoader.loadAll = peopleLoader.load.bind(peopleLoader, '__all__');\n  personLoader.loadByURL = personByURLLoader.load.bind(personByURLLoader);\n  personLoader.loadManyByURL =\n    personByURLLoader.loadMany.bind(personByURLLoader);\n  const loaders = {person: personLoader};\n  return {\n    context: {loaders},\n    graphiql: true,\n    schema,\n  };\n}));\n\napp.listen(\n  5000,\n  () => console.log('GraphQL Server running at http://localhost:5000')\n);\n"]}